basePath: /
definitions:
  model.APIError:
    properties:
      message:
        type: string
    type: object
  model.PaginatedList-model_SongView:
    properties:
      items:
        items:
          $ref: '#/definitions/model.SongView'
        type: array
      page:
        type: integer
      pageSize:
        type: integer
      totalPages:
        type: integer
    type: object
  model.SongView:
    properties:
      createdAt:
        type: string
      group:
        type: string
      id:
        type: string
      link:
        type: string
      releaseDate:
        type: string
      song:
        type: string
      text:
        type: string
      updatedAt:
        type: string
    type: object
  song.CreateRequest:
    properties:
      group:
        maxLength: 255
        type: string
      song:
        maxLength: 255
        type: string
    required:
    - group
    - song
    type: object
  song.UpdateRequest:
    properties:
      group:
        maxLength: 255
        type: string
      id:
        type: string
      link:
        maxLength: 2048
        type: string
      releaseDate:
        type: string
      song:
        maxLength: 255
        type: string
      text:
        maxLength: 2048
        type: string
    required:
    - id
    type: object
info:
  contact: {}
  description: Song Library API
  title: Song Library API
  version: "1.0"
paths:
  /songs:
    get:
      consumes:
      - application/json
      description: Retrieves a paginated list of songs with optional filters
      parameters:
      - description: Filter by song name
        in: query
        name: song
        type: string
      - description: Filter by text
        in: query
        name: text
        type: string
      - description: Filter by link
        in: query
        name: link
        type: string
      - description: Filter by release date (DD.MM.YYYY)
        in: query
        name: releaseDate
        type: string
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Page size (default: 5)'
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.PaginatedList-model_SongView'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/model.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/model.APIError'
      summary: Get list of songs
      tags:
      - Songs
  /songs/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a song by its ID
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SongView'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/model.APIError'
        "404":
          description: Song not found
          schema:
            $ref: '#/definitions/model.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/model.APIError'
      summary: Delete a song
      tags:
      - Songs
  /songs/{id}/edit:
    patch:
      consumes:
      - application/json
      description: Updates the details of an existing song
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated song data
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/song.UpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SongView'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/model.APIError'
        "404":
          description: Song not found
          schema:
            $ref: '#/definitions/model.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/model.APIError'
      summary: Update a song
      tags:
      - Songs
  /songs/{id}/text:
    get:
      consumes:
      - application/json
      description: Retrieves song text by song ID with optional pagination for verses
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: string
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Page size (default: 1)'
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/model.APIError'
        "404":
          description: Song not found
          schema:
            $ref: '#/definitions/model.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/model.APIError'
      summary: Get song text
      tags:
      - Songs
  /songs/new:
    post:
      consumes:
      - application/json
      description: Adds a new song to the library
      parameters:
      - description: Song data
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/song.CreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SongView'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/model.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/model.APIError'
      summary: Create a new song
      tags:
      - Songs
swagger: "2.0"
